{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"tolerance.js","sourcesContent":["var app = angular.module('ToleranceApp', [])\n                  .constant('API_URL', 'http://dopusk.local/admin/api/v1/');\n\napp.service('orderedQualities', function(){\n  var array = [];\n  var set = function(val){\n    array = val;\n  };\n  var get = function(){\n    return array;\n  };\n  return {\n    set: set,\n    get: get\n  };\n});\n\napp.controller('ToleranceAppCtrl', function($scope, $http, API_URL, orderedQualities){\n  $http.get(API_URL + 'tolerances').success(buildGrid);\n\n  function buildGrid(responce){\n    $scope.tolerances = responce;\n    $scope.ranges = getItems($scope.tolerances);\n    $scope.systems = getItems($scope.tolerances[$scope.ranges[0]['id']]['systems']);\n    $scope.qualities = getItems($scope.tolerances[$scope.ranges[0]['id']]['systems']\n                                                [$scope.systems[0]['title']]['qualities']);\n    $scope.fields = getItems($scope.tolerances[$scope.ranges[0]['id']]['systems']\n                                             [$scope.systems[0]['title']]['qualities']\n                                             [$scope.qualities[0]['id']]['fields']);\n    $scope.cur_range = $scope.ranges[0]['id'];\n    $scope.cur_system = $scope.systems[0]['title'];\n    $scope.refreshGrid();\n  }\n\n  $scope.refreshGrid = function(){\n    orderedQualities.set([]);\n    $scope.grid = $scope.tolerances[$scope.cur_range]['systems']\n                                   [$scope.cur_system]['qualities'];\n    resetCurItemForm();\n  };\n\n  $scope.editField = function(field, quality){\n    $scope.cur_max_val = field.tolerance.max;\n    $scope.cur_min_val = field.tolerance.min;\n    $scope.cur_item = field.tolerance;\n    $scope.cur_field_name = field.title;\n    $scope.cur_quality_name = quality.title;\n  };\n\n  $scope.updateField = function(){\n    $scope.cur_item['max'] = $scope.cur_max_val;\n    $scope.cur_item['min'] = $scope.cur_min_val;\n  };\n\n  $scope.fieldBySystem = function(text){\n    return ($scope.cur_system == 'hole')? text.toUpperCase(): text;\n  }\n\n  function getItems(items) {\n    var res = [];\n    angular.forEach(items, function(item, key){\n      new_item = angular.copy(item);\n      delete new_item['systems'];\n      delete new_item['qualities'];\n      delete new_item['fields'];\n      delete new_item['tolerance'];\n      res.push(new_item);\n    });\n    return res;\n  }\n\n  function resetCurItemForm(){\n    $scope.cur_max_val = '';\n    $scope.cur_min_val = '';\n    $scope.cur_item = undefined;\n    $scope.cur_field_name = '';\n    $scope.cur_quality_name = '';\n  }\n});\n\napp.filter('orderQualities', function(orderedQualities){\n  return function(items){\n    var arr = orderedQualities.get();\n    if (!arr.length) {\n      angular.forEach(items, function(item, key){\n        arr.push({\n          name: item['title'],\n          item: item\n        });\n      });\n      arr = arr.sort(function(a,b){\n        if(a.name === '01'){ return -1 }\n        if(b.name === '01'){ return 1 }\n        return (parseFloat(a.name) < parseFloat(b.name))? -1: 1;\n      });\n      orderedQualities.set(arr);\n    }\n    return arr;\n  }\n});\n"]}